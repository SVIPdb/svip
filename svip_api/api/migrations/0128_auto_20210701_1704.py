# Generated by Django 2.2.24 on 2021-07-01 17:04

from django.db import migrations

def create_SVIP_variants(apps, schema_editor):
    # Create a VariantInSVIP instance for each existing variant
    
    Variant = apps.get_model('api', 'Variant')
    VariantInSVIP = apps.get_model('api', 'VariantInSVIP')
    
    for variant in Variant.objects.all():
        try:
            svip_variant = variant.variantinsvip
        except:
            svip_variant = VariantInSVIP(variant=variant)
            try:
                svip_variant.save()
            except:
                pass

def drop_SVIP_variants(apps, schema_editor):
    # Delete SVIP variants, excepted those linked to curation entries
    
    VariantInSVIP = apps.get_model('api', 'VariantInSVIP')
    DiseaseInSVIP = apps.get_model('api', 'DiseaseInSVIP')
    
    for svip_var in VariantInSVIP.objects.all():
        if len(DiseaseInSVIP.objects.filter(svip_variant=svip_var.id)) == 0:
            svip_var.delete()
        else:
            pass
        



class Migration(migrations.Migration):

    dependencies = [
        ('api', '0127_save_curation_entries'),
    ]

    operations = [
        migrations.RunPython(create_SVIP_variants, reverse_code=drop_SVIP_variants)
    ]
